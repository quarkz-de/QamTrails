unit Qam.Migrations;

interface

uses
  System.SysUtils,
  Spring, Spring.Persistence.Mapping.Attributes;

type
  TMigrationStatus = (migPending, migSuccessful);

  [Entity]
  [Table('MIGRATIONS')]
  TMigration = class
  private
    [Column('ID', [cpRequired, cpPrimaryKey])][AutoGenerated]
    FId: Integer;
    FMigration: Integer;
    [Column('STATUS')]
    FStatus: Integer;
  protected
    function GetStatus: TMigrationStatus;
    procedure SetStatus(Value: TMigrationStatus);
  public
    constructor Create; virtual;
    property Id: Integer read FId;

    [Column('MIGRATION')]
    property Migration: Integer read FMigration write FMigration;

    property Status: TMigrationStatus read GetStatus write SetStatus;
  end;

implementation

const
  MigrationPending = 0;
  MigrationSuccessful = 1;

{ TMigration }

constructor TMigration.Create;
begin
  inherited Create;
end;

function TMigration.GetStatus: TMigrationStatus;
begin
  case FStatus of
    MigrationPending:
      Result := migPending;
    MigrationSuccessful:
      Result := migSuccessful;
    else
      Result := migPending;
  end;
end;

procedure TMigration.SetStatus(Value: TMigrationStatus);
begin
  case Value of
    migPending:
      FStatus := MigrationPending;
    migSuccessful:
      FStatus := MigrationSuccessful;
    else
      FStatus := MigrationPending;
  end;
end;

end.
